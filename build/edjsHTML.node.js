"use strict";var t=/(https?:\/\/)?([\w-@])+\.{1}([a-zA-Z]{2,63})([/\w-]*)*\/?\??([^\n\r ]*)/g,e=/([\w.])+@([\w.])+/g,n={delimiter:function(){return"<br/>"},header:function(t){var e=t.data;return"<h"+e.level+"> "+e.text+" </h"+e.level+">"},paragraph:function(n){return"<p> "+(n.data.text||"").replace(t,(function(t){if(e.test(t))return t;var n=t;return/^https?:\/\//.test(t)||(n="https://"+t),'<a href="'+n+'" target="_blank">'+n+"</a>"})).replace(e,'<a href="mailto:$&" target="_blank">$&</a>')+" </p>"},list:function(t){var e=t.data,n="unordered"===e.style?"ul":"ol",i="";return e.items&&(i=e.items.map((function(t){return"<li> "+t+" </li>"})).reduce((function(t,e){return t+e}),"")),"<"+n+"> "+i+" </"+n+">"},image:function(t){var e=t.data,n='<img src="'+(e.file?e.file.url:"")+'" alt="'+e.caption+'" />';return""!==e.caption&&(n+='<p class="module-image-caption">'+e.caption+"</p>"),n},video:function(t){var e=t.data,n='<video controls src="'+(e.file?e.file.url:"")+'" alt="'+e.caption+'"></video>';return""!==e.caption&&(n+='<p class="module-video-caption">'+e.caption+"</p>"),n},quote:function(t){var e=t.data;return"<blockquote> "+e.text+" </blockquote> - "+e.caption},link:function(t){var n,i,o,l,r,a,u,c,s,d=t.data,p=d.link||"",v=[];return(null===(n=d.meta)||void 0===n?void 0:n.image)&&(null===(o=null===(i=d.meta)||void 0===i?void 0:i.image)||void 0===o?void 0:o.url)&&v.push('<div class="link-tool__image" style="background-image: url(&quot;'+(null===(r=null===(l=null==d?void 0:d.meta)||void 0===l?void 0:l.image)||void 0===r?void 0:r.url)+'&quot;);"></div>'),(null===(a=d.meta)||void 0===a?void 0:a.title)&&v.push('<div class="link-tool__title">'+(null===(u=d.meta)||void 0===u?void 0:u.title)+"</div>"),(null===(c=d.meta)||void 0===c?void 0:c.description)&&v.push('<p class="link-tool__description">'+(null===(s=d.meta)||void 0===s?void 0:s.description)+"</p>"),e.test(p)?(v.push('<div class="link-tool__title">'+p+"</div>"),'<div class="link-tool"><a class="link-tool__content link-tool__content--rendered" target="_blank" href="mailto:'+p+'">'+v.join("")+'<span class="link-tool__anchor">„Åì„Å°„Çâ„ÅÆ„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„Å´„É°„Éº„É´„ÇíÈÄÅ„Çã</span></a></div>'):'<div class="link-tool"><a class="link-tool__content link-tool__content--rendered" target="_blank" rel="nofollow noindex noreferrer" href="'+d.link+'">'+v.join("")+'<span class="link-tool__anchor">'+d.link+"</span></a></div>"},embed:function(t){var e=t.data;return"youtube"!==e.service?"":'<iframe width="'+e.width+'" height="'+e.height+'" src="'+e.embed+'" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p class="embed-youtube-caption">'+e.caption+"</p>"}};function i(t){return new Error('[31m The Parser function of type "'+t+'" is not defined. \n\n  Define your custom parser functions as: [34mhttps://github.com/pavittarx/editorjs-html#extend-for-custom-blocks [0m')}module.exports=function(t){return void 0===t&&(t={}),Object.assign(n,t),{parse:function(t){return t.blocks.map((function(t){return n[t.type]?n[t.type](t):i(t.type)}))},parseBlock:function(t){return n[t.type]?n[t.type](t):i(t.type)}}};
